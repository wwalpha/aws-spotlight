[
  { "EventName": "RunInstances", "EventSource": "ec2.amazonaws.com", "Create": true },
  { "EventName": "TerminateInstances", "EventSource": "ec2.amazonaws.com", "Delete": true },

  { "EventName": "CreateRestApi", "EventSource": "apigateway.amazonaws.com", "Create": true },
  { "EventName": "ImportRestApi", "EventSource": "apigateway.amazonaws.com", "Create": true },
  { "EventName": "DeleteRestApi", "EventSource": "apigateway.amazonaws.com", "Delete": true },

  { "EventName": "CreateDBCluster", "EventSource": "rds.amazonaws.com", "Create": true },
  { "EventName": "CreateDBInstance", "EventSource": "rds.amazonaws.com", "Create": true },
  { "EventName": "DeleteDBCluster", "EventSource": "rds.amazonaws.com", "Delete": true },
  { "EventName": "DeleteDBInstance", "EventSource": "rds.amazonaws.com", "Delete": true },

  { "EventName": "CreateTargetGroup", "EventSource": "elasticloadbalancing.amazonaws.com", "Create": true },
  { "EventName": "CreateLoadBalancer", "EventSource": "elasticloadbalancing.amazonaws.com", "Create": true },
  { "EventName": "DeleteLoadBalancer", "EventSource": "elasticloadbalancing.amazonaws.com", "Delete": true },
  { "EventName": "DeleteTargetGroup", "EventSource": "elasticloadbalancing.amazonaws.com", "Delete": true },

  { "EventName": "CreateBackend", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "CreateBackendConfig", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "GetBackend", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "ListBackendJobs", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "RemoveAllBackends", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateBackendConfig", "EventSource": "amplifybackend.amazonaws.com", "Ignore": true },
  { "EventName": "CreateBackendEnvironment", "EventSource": "amplify.amazonaws.com", "Ignore": true },
  { "EventName": "CreateDeployment", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "CreateStage", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteDeployment", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteMethod", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteStage", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "PutIntegration", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "PutIntegrationResponse", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "PutMethod", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "PutMethodResponse", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "TagResource", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateGatewayResponse", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateIntegrationResponse", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateMethod", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateMethodResponse", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateRestApi", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateStage", "EventSource": "apigateway.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateVirtualNode", "EventSource": "appmesh.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateVirtualService", "EventSource": "appmesh.amazonaws.com", "Ignore": true },
  { "EventName": "CreateNamedQuery", "EventSource": "athena.amazonaws.com", "Ignore": true },
  { "EventName": "StartQueryExecution", "EventSource": "athena.amazonaws.com", "Ignore": true },
  { "EventName": "CreateStackInstances", "EventSource": "cloudformation.amazonaws.com", "Ignore": true },
  { "EventName": "CreateStackSet", "EventSource": "cloudformation.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteStackInstances", "EventSource": "cloudformation.amazonaws.com", "Ignore": true },
  { "EventName": "CreateEnvironment", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "CreateSession", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteEnvironment", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "PutCredentials", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "SendHeartBeat", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "StartEnvironment", "EventSource": "cloudshell.amazonaws.com", "Ignore": true },
  { "EventName": "AssociateExternalConnection", "EventSource": "codeartifact.amazonaws.com", "Ignore": true },
  { "EventName": "CreateDomain", "EventSource": "codeartifact.amazonaws.com", "Ignore": true },
  { "EventName": "CreateRepository", "EventSource": "codeartifact.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateRepository", "EventSource": "codeartifact.amazonaws.com", "Ignore": true },
  { "EventName": "StartBuild", "EventSource": "codebuild.amazonaws.com", "Ignore": true },
  { "EventName": "StopBuild", "EventSource": "codebuild.amazonaws.com", "Ignore": true },
  {
    "EventName": "BatchAssociateApprovalRuleTemplateWithRepositories",
    "EventSource": "codecommit.amazonaws.com",
    "Ignore": true
  },
  { "EventName": "CreateApprovalRuleTemplate", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "CreatePullRequest", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteBranch", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "GitPush", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "MergePullRequestByFastForward", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "PostCommentForPullRequest", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "PutCommentReaction", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "PutFile", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateApprovalRuleTemplateContent", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateApprovalRuleTemplateDescription", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "UpdatePullRequestStatus", "EventSource": "codecommit.amazonaws.com", "Ignore": true },
  { "EventName": "SetIdentityPoolRoles", "EventSource": "cognito-identity.amazonaws.com", "Ignore": true },
  { "EventName": "AdminAddUserToGroup", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "AdminCreateUser", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "AdminInitiateAuth", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "AdminSetUserPassword", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "CreateGroup", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "CreateUserPoolClient", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateUserPool", "EventSource": "cognito-idp.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateResourceCollection", "EventSource": "devops-guru.amazonaws.com", "Ignore": true },
  { "EventName": "AddRegion", "EventSource": "ds.amazonaws.com", "Ignore": true },
  { "EventName": "ResetUserPassword", "EventSource": "ds.amazonaws.com", "Ignore": true },
  { "EventName": "DescribeKinesisStreamingDestination", "EventSource": "dynamodb.amazonaws.com", "Ignore": true },
  { "EventName": "ListContributorInsights", "EventSource": "dynamodb.amazonaws.com", "Ignore": true },
  { "EventName": "TagResource", "EventSource": "dynamodb.amazonaws.com", "Ignore": true },
  { "EventName": "UpdateTable", "EventSource": "dynamodb.amazonaws.com", "Ignore": true },
  { "EventName": "AcceptVpcPeeringConnection", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AllocateAddress", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AssociateAddress", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AssociateClientVpnTargetNetwork", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AssociateIamInstanceProfile", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AssociateRouteTable", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AttachInternetGateway", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AttachNetworkInterface", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AttachVolume", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AuthorizeClientVpnIngress", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AuthorizeSecurityGroupEgress", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "AuthorizeSecurityGroupIngress", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "CreateKeyPair", "EventSource": "ec2.amazonaws.com", "Ignore": true },
  { "EventName": "CreateAddon", "EventSource": "eks.amazonaws.com", "Ignore": true },
  { "EventName": "CreateAccessPoint", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },
  { "EventName": "CreateMountTarget", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteAccessPoint", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },
  { "EventName": "DeleteMountTarget", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },
  { "EventName": "PutBackupPolicy", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },
  { "EventName": "PutLifecycleConfiguration", "EventSource": "elasticfilesystem.amazonaws.com", "Ignore": true },

  { "EventName": "PutRule", "EventSource": "events.amazonaws.com", "Ignore": true },
  { "EventName": "PutTargets", "EventSource": "events.amazonaws.com", "Ignore": true },
  { "EventName": "RemoveTargets", "EventSource": "events.amazonaws.com", "Ignore": true },
  { "EventName": "TestEventPattern", "EventSource": "events.amazonaws.com", "Ignore": true },
  { "EventName": "TestScheduleExpression", "EventSource": "events.amazonaws.com", "Ignore": true }
]
