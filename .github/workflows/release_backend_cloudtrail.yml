name: RELEASE_B) Cloudtrail Build

on:
  workflow_run:
    workflows:
      - RELEASE_T) Backend Build
    types:
      - completed

env:
  ECR_REPOSITORY_CLOUDTRAIL: arms/cloudtrail
  ECR_REPOSITORY_UNPROCESSED: arms/unprocessed
  AWS_DEFAULT_REGION: us-east-1
  SSM_PARAMETER_NAME_CLOUDTRAIL: /arms/repository_url/cloudtrail
  SSM_PARAMETER_NAME_UNPROCESSED: /arms/repository_url/unprocessed
  WORKING_DIR: backend/src/cloudtrail

jobs:
  build:
    runs-on: ubuntu-18.04
    environment:
      name: prod
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # Install and Build
      - name: Build
        run: |
          yarn install
          yarn build

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # docker build and push
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f "Dockerfile.CloudTrail" -t $ECR_REPOSITORY_CLOUDTRAIL .
          docker tag $ECR_REPOSITORY_CLOUDTRAIL $ECR_REGISTRY/$ECR_REPOSITORY_CLOUDTRAIL:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_CLOUDTRAIL:$IMAGE_TAG
          echo "::set-output name=image_cloudtrail::$ECR_REGISTRY/$ECR_REPOSITORY_CLOUDTRAIL:$IMAGE_TAG"

          docker build -f "Dockerfile.Unprocessed" -t $ECR_REPOSITORY_UNPROCESSED .
          docker tag $ECR_REPOSITORY_UNPROCESSED $ECR_REGISTRY/$ECR_REPOSITORY_UNPROCESSED:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_UNPROCESSED:$IMAGE_TAG
          echo "::set-output name=image_unprocessed::$ECR_REGISTRY/$ECR_REPOSITORY_UNPROCESSED:$IMAGE_TAG"

      # Lambda Deploy
      - name: Lambda Deploy
        uses: appleboy/lambda-action@master
        with:
          function_name: arms-cloudtrail
          image_uri: ${{ steps.build-image.outputs.image_cloudtrail }}

      # Lambda Deploy
      - name: Lambda Deploy
        uses: appleboy/lambda-action@master
        with:
          function_name: arms-unprocessed
          image_uri: ${{ steps.build-image.outputs.image_unprocessed }}

      # Update Repository URL
      - name: Update repository url
        run: |
          aws ssm put-parameter --name $SSM_PARAMETER_NAME_CLOUDTRAIL --type "String" --value ${{ steps.build-image.outputs.image_cloudtrail }} --overwrite
          aws ssm put-parameter --name $SSM_PARAMETER_NAME_UNPROCESSED --type "String" --value ${{ steps.build-image.outputs.image_unprocessed }} --overwrite

      # Update event type table
      - name: Update Event Type
        run: |
          yarn release
